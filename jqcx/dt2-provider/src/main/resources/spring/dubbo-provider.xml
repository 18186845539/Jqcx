<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans.xsd  
  http://code.alibabatech.com/schema/dubbo
  http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	<!-- 生产者 -->
	<dubbo:application name="jiQCar-provider" />

	<!-- 使用zookeeper注册中心暴露服务地址 -->
<!--	<dubbo:registry address="zookeeper://61.138.179.142:2181" />-->
	<!--
    说明：
       dubbo:registry 标签一些属性的说明：

          1）register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。

          2）check注册中心不存在时，是否报错。

          3）subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。

          4）timeout注册中心请求超时时间(毫秒)。

          5）address可以Zookeeper集群配置，地址可以多个以逗号隔开等。

      dubbo:service标签的一些属性说明：

         1）interface服务接口的路径

         2）ref引用对应的实现类的Bean的ID

         3）registry向指定注册中心注册，在多个注册中心时使用，值为<dubbo:registry>的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A

         4）register 默认true ，该协议的服务是否注册到注册中心。
    -->
	 <dubbo:registry address="zookeeper://127.0.0.1:2181" id="server"/>
	 <!-- <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,172.16.88.248:2181,172.16.88.247:2181" />-->
 	 <!--<dubbo:registry protocol="zookeeper" address="172.16.88.183:2181,172.16.88.184:2181,172.16.88.185:2181" />-->
<!--	<dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,172.16.88.248:2181,172.16.88.247:2181" />-->
	<!-- 用dubbo协议在2081端口暴露服务 ，注意不能与其他服务端口相同  -->
	<!-- dispatcher all所有请求都发到线程池处理，threadpool fixed固定线程池大小，初始化后不进行伸缩，threads 线程池内线程个数 -->
	<!-- <dubbo:protocol accesslog="true" />开启访问日志记录 -->
	<!-- <dubbo:protocol accesslog="http://10.20.160.198/wiki/display/dubbo/foo/bar.log" />规定访问日志的路径 -->
	<!-- <dubbo:protocol name="dubbo" connections="2" accepts="1000"/> dubbo协议使用长连接和nio，这里connections=2表示同时建立两个长连接
	（要在provier和consumer同时写上）
        accepts=1000  表示为了防止同时过来大量连接而被干掉，限制最大为1000
        -->
	<!--协议配置，用于配置提供服务的协议信息，协议由提供方指定，消费方被动接受。-->
	<dubbo:protocol name="dubbo" port="20889" dispatcher="all" threadpool="cached" accepts="2000" threads="1000" payload="31457280" />
<!--	<dubbo:protocol name="dubbo" port="9090" server="netty" client="netty" codec="dubbo"
					serialization="hessian2" charset="UTF-8" threadpool="fixed" threads="100"
					queues="0" iothreads="9" buffer="8192" accepts="1000" payload="8388608" />-->

	<!-- 声明需要暴露的服务接口 -->
	<dubbo:provider delay="-1" timeout="10000" retries="0"/><!-- 全局超时,重试机制 -->
	<dubbo:service interface="com.xm.xmap1702044.service.TokenManager" ref="manager" loadbalance="roundrobin" mock="return null"  registry="server"/>
	<dubbo:service interface="com.test.demo.service.FoodEncyService" ref="FoodEncyService" loadbalance="roundrobin" mock="return null"  registry="server"/>
	<dubbo:service interface="com.test.demo.service.HomePageService" ref="HomePageService" loadbalance="roundrobin" mock="return null" registry="server"/>
</beans>




